import random

# Define categories of words
categories = {
    "programming": ['python', 'java', 'swift', 'javascript', 'hangman', 'programming', 'developer', 'code', 'algorithm'],
    "animals": ['dog', 'cat', 'elephant', 'lion', 'tiger', 'zebra', 'giraffe', 'rhinoceros', 'hippopotamus'],
    # Add more categories as needed
}

# The hangman stages as ASCII art
hangman_stages = [
    # Final stage: complete hangman
    """
       +---+
       |   |
       O   |
      /|\\  |
      / \\  |
           |
    =========
    """,
    # Stage 5
    """
       +---+
       |   |
       O   |
      /|\\  |
      /     |
           |
    =========
    """,
    # Stage 4
    """
       +---+
       |   |
       O   |
      /|\\  |
           |
           |
    =========
    """,
    # Stage 3
    """
       +---+
       |   |
       O   |
      /|   |
           |
           |
    =========
    """,
    # Stage 2
    """
       +---+
       |   |
       O   |
       |   |
           |
           |
    =========
    """,
    # Stage 1
    """
       +---+
       |   |
       O   |
           |
           |
           |
    =========
    """,
    # Initial stage: no hangman
    """
       +---+
       |   |
           |
           |
           |
           |
    =========
    """
]

def choose_word(category):
    """Randomly choose a word from the specified category."""
    return random.choice(categories[category]).upper()

def play(word):
    """Main game function."""
    word_completion = "_" * len(word)  # string to store the guesses
    guessed = False
    guessed_letters = []
    guessed_words = []
    tries = 6  # corresponds to the length of hangman_stages - 1

    print("Let's play Hangman!")
    print(display_hangman(tries))
    print(word_completion + "\n")

    while not guessed and tries > 0:
        guess = input("Please guess a letter or word: ").upper()
        if len(guess) == 1 and guess.isalpha():
            if guess in guessed_letters:
                print("You already guessed the letter", guess)
            elif guess not in word:
                print(guess, "is not in the word.")
                tries -= 1
                guessed_letters.append(guess)
            else:
                print("Good job,", guess, "is in the word!")
                guessed_letters.append(guess)
                word_as_list = list(word_completion)
                indices = [i for i, letter in enumerate(word) if letter == guess]
                for index in indices:
                    word_as_list[index] = guess
                word_completion = "".join(word_as_list)
                if "_" not in word_completion:
                    guessed = True
        elif len(guess) == len(word) and guess.isalpha():
            if guess in guessed_words:
                print("You already guessed the word", guess)
            elif guess != word:
                print(guess, "is not the word.")
                tries -= 1
                guessed_words.append(guess)
            else:
                guessed = True
                word_completion = word
        else:
            print("Not a valid guess.")
        print(display_hangman(tries))
        print(word_completion + "\n")

    if guessed:
        print("Congrats, you guessed the word! You win!")
    else:
        print("Sorry, you ran out of tries. The word was " + word + ". Maybe next time!")

def display_hangman(tries):
    """Return the stage of the hangman based on the remaining tries."""
    return hangman_stages[tries]

def main():
    category = input("Choose a category (programming/animals): ").lower()
    word = choose_word(category)
    play(word)
    while input("Play Again? (Y/N) ").upper() == "Y":
        category = input("Choose a category (programming/animals): ").lower()
        word = choose_word(category)
        play(word)

if __name__ == "__main__":
    main()
